<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LxSXhPh/oJuTh3+RX8EAAAAASUVORK5CYII=
</value>
  </data>
</root>